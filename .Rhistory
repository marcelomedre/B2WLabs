geom_point(aes(x = P5_sales$Price,  y = exp(fitP5), color = "red"))+
xlab("Preço")+
ylab("Quantidade P5")+
scale_colour_manual(name = " Quantidades P5",
values =c('black'='black','red'='red'),
labels = c("Observada","Prevista"))
P5_sales_poly <- P5_sales
P5_sales_poly$poly <- exp(fitP5)
ggplot()+
geom_point(data = P5_sales_poly, aes(x = 1:49, y = QTY_ORDER, group = day, color = factor(month)), size = 3)+
geom_point(data = P5_sales_poly, aes(x = 1:49, y = poly), size = 2, color = "red")+
xlab("Dias da Semana ao longo dos meses")+
ylab("Quantidade vendida Produto 5")
ggplot()+
geom_point(data = full_results_P5.fit,
aes(x = 1:49, y = QTY_ORDER, group = day, color = factor(month)), size = 3)+
geom_point(data = full_results_P5.fit, aes(x = 1:49, y = predicted_full), size = 3, color = "red")+
geom_point(data = P5_sales_poly, aes(x = 1:49, y = poly), size = 3, color = "black")+
xlab("Dias da Semana ao longo dos meses")+
ylab("Quantidade vendida Produto 5")
View(P5_sales_poly)
P5_sales_poly$poly <- exp(fitP5)
P5_sales_poly$poly <- exp(fitP5)
rdois_poly <- lm(log(P5_sales$QTY_ORDER) ~ fitP5)
summary(rdois_poly)$r.squared
ggplot()+
geom_point(data = P5_sales, aes(x = Price, y = QTY_ORDER, color = "black"), size = 4)+
geom_point(aes(x = P5_sales$Price,  y = exp(fitP5), color = "red"))+
xlab("Preço")+
ylab("Quantidade P5")+
scale_colour_manual(name = " Quantidades P5",
values =c('black'='black','red'='red'),
labels = c("Observada","Prevista"))
P5_sales_poly <- P5_sales
P5_sales_poly$poly <- exp(fitP5)
fitP5 <- predict(regP5, newdata = P5_sales, type = "response")
fitP5
ggplot()+
geom_point(data = P5_sales_poly, aes(x = 1:49, y = QTY_ORDER, group = day, color = factor(month)), size = 3)+
geom_point(data = P5_sales_poly, aes(x = 1:49, y = poly), size = 2, color = "red")+
xlab("Dias da Semana ao longo dos meses")+
ylab("Quantidade vendida Produto 5")
exp(fitP5)
exp(exp(fitP5))
P5_sales_poly$poly <- exp(exp(fitP5))
ggplot()+
geom_point(data = P5_sales_poly, aes(x = 1:49, y = exp(QTY_ORDER), group = day, color = factor(month)), size = 3)+
geom_point(data = P5_sales_poly, aes(x = 1:49, y = poly), size = 2, color = "red")+
xlab("Dias da Semana ao longo dos meses")+
ylab("Quantidade vendida Produto 5")
ggplot()+
geom_point(data = full_results_P5.fit,
aes(x = 1:49, y = QTY_ORDER, group = day, color = factor(month)), size = 3)+
geom_point(data = full_results_P5.fit, aes(x = 1:49, y = predicted_full), size = 3, color = "red")+
geom_point(data = P5_sales_poly, aes(x = 1:49, y = poly), size = 3, color = "black")+
xlab("Dias da Semana ao longo dos meses")+
ylab("Quantidade vendida Produto 5")
library(e1071)
model_svm <- svm(f, data = train_nn, scale = TRUE, kernel = 'radial',
cachesize = 1600, cross = 5, epsilon = 0.1)
svm_val <- predict(model_svm, val_resp)
svm_val <- predict(model_svm, val_nn)
p5svm.rmse <- sqrt(mean((svm_val - val_resp)^2))
p5svm.rmse
summary(model_svm)
results_svm <- as.data.frame(cbind(val_nn, val_resp, svm_val))
View(results_svm)
ggplot(results_svm, aes(x = Price, y = val_resp))+
geom_point(size = 4)+
geom_point(aes(y = results_svm$svm_val), col = "red")+
xlab("Preço")+
ylab("Quantidade P5")
tuned_model_svm <- tune(svm, f, data = train, scale = TRUE, kernel = 'radial',
cachesize = 2000, ranges = list(epsilon = seq(0.01,0.4,0.01),
cost = 2^(2:9)))
tuned_model_svm <- tune(svm, f, data = train, scale = TRUE, kernel = 'radial',
cachesize = 2000, ranges = list(epsilon = seq(0.01,0.4,0.01),
cost = 2^(2:9)))
library(caret)
tuned_model_svm <- tune(svm, f, data = train, scale = TRUE, kernel = 'radial',
cachesize = 2000, ranges = list(epsilon = seq(0.01,0.4,0.01),
cost = 2^(2:9)))
10e-3
10e2.5
10e(2.5)
10*e(2.5)
10*exp(2.5)
tuned_model_svm <- tune(svm, f, data = train, scale = TRUE, kernel = 'radial',
cachesize = 2000, gamma =10^(-5:-1),
epsilon = seq(0.1,0.4,0.01), cost = 10^(-3:2.5))
tuned_model_svm <- tune(svm, f, data = train_nn, scale = TRUE, kernel = 'radial',
cachesize = 2000, gamma =10^(-5:-1),
epsilon = seq(0.1,0.4,0.01),
cost = 10^(-3:2.5))
print(tuned_model_svm)
plot(tuned_model_svm)
tuned_model_svm <- tune(svm, f, data = train_nn, scale = TRUE, kernel = 'radial',
cachesize = 2000, ranges = list(gamma = 10^(-5:-1),
epsilon = seq(0.1,0.4,0.01),
cost = 10^(-3:2.5)))
print(tuned_model_svm)
plot(tuned_model_svm)
tuned_model_P5 <- tuned_model_svm$best.model
summary(tuned_model_P5)
tuned_svm_val <- predict(tuned_model_P5, val_nn)
results_tuned_svm <- as.data.frame(cbind(val_nn, val_resp, tuned_svm_val))
RMSE_tuned_SVM <-  sqrt(mean(results_tuned_svm$val_resp - tuned_svm_val)^2)
RMSE_tuned_SVM
exp(0.120206)
rdois_tuned_svm_te <- lm(val_resp ~ tuned_svm_val, data = results_tuned_svm)
summary(rdois_tuned_svm_te)$r.squared
ggplot(results_tuned_svm, aes(x = Price, y = val_resp))+
geom_point(size = 4)+
geom_point(aes(y = results_tuned_svm$tuned_svm_val), col = "red")+
xlab("Preço")+
ylab("Quantidade P2")
tuned_svm_full <- predict(tuned_model_P5, P5_sales)
full_results_tuned_svm <- as.data.frame(cbind(P5_sales, tuned_svm_full))
View(full_results_tuned_svm)
RMSE_SVM <-  sqrt(mean(full_results_tuned_svm$QTY_ORDER - tuned_svm_full)^2)
RMSE_SVM
exp(0.0089257)
rdois_2_full <- lm(QTY_ORDER ~ tuned_svm_full, data = full_results_tuned_svm)
summary(rdois_2_full)$r.squared
full_results_tuned_svm$QTY_ORDER <- exp(full_results_tuned_svm$QTY_ORDER)
full_results_tuned_svm$tuned_svm_full <- exp(full_results_tuned_svm$tuned_svm_full)
ggplot(full_results_tuned_svm, aes(x = Price, y = QTY_ORDER))+
geom_point(size = 4)+
geom_point(aes(y = full_results_tuned_svm$tuned_svm_full), col = "red")+
xlab("Preço")+
ylab("Quantidade P5")
ggplot()+
geom_point(data = full_results_tuned_svm,
aes(x = 1:49, y = QTY_ORDER, group = day, color = factor(month)), size = 3)+
geom_point(data = full_results_tuned_svm, aes(x = 1:49, y = tuned_svm_full), size = 3, color = "red")+
geom_point(data = P5_sales_poly, aes(x = 1:49, y = poly), size = 3, color = "black")+
xlab("Dias da Semana ao longo dos meses")+
ylab("Quantidade vendida Produto 4")
ggplot()+
geom_point(data = full_results_tuned_svm,
aes(x = 1:49, y = QTY_ORDER, group = day), color = "black", size = 3)+
geom_point(data = full_results_tuned_svm, aes(x = 1:49, y = tuned_svm_full), size = 3, color = "red")+
geom_point(data = P5_sales_poly, aes(x = 1:49, y = poly), size = 3, color = "green")+
geom_point(data = full_results_P5.fit, aes(x = 1:49, y = predicted_full), size = 3, color = "grey")+
xlab("Dias da Semana ao longo dos meses")+
ylab("Quantidade vendida Produto 4")
ggplot()+
geom_point(data = full_results_tuned_svm,
aes(x = 1:49, y = QTY_ORDER, group = day), color = "black", size = 3)+
geom_point(data = full_results_tuned_svm, aes(x = 1:49, y = tuned_svm_full), size = 3, color = "red")+
geom_point(data = P5_sales_poly, aes(x = 1:49, y = poly), size = 3, color = "green")+
geom_point(data = full_results_P5.fit, aes(x = 1:49, y = predicted_full), size = 3, color = "grey")+
xlab("Dias da Semana ao longo dos meses")+
ylab("Quantidade vendida Produto 5")+
scale_colour_manual(name = " Quantidades P5",
values =c('black'='black','red'='red', "green" = "green", "grey"="grey"),
labels = c("Observada","Prevista"))
ggplot()+
geom_point(data = full_results_tuned_svm,
aes(x = 1:49, y = QTY_ORDER, group = day), color = "black", size = 3)+
geom_point(data = full_results_tuned_svm, aes(x = 1:49, y = tuned_svm_full), size = 3, color = "red")+
geom_point(data = P5_sales_poly, aes(x = 1:49, y = poly), size = 3, color = "green")+
geom_point(data = full_results_P5.fit, aes(x = 1:49, y = predicted_full), size = 3, color = "grey")+
xlab("Dias da Semana ao longo dos meses")+
ylab("Quantidade vendida Produto 5")+
scale_colour_manual(values =c('black'='black','red'='red', "green" = "green", "grey"="grey"),
labels = c("Observada","Prevista"))
ggplot()+
geom_point(data = full_results_tuned_svm,
aes(x = 1:49, y = QTY_ORDER, group = day), color = "black", size = 3)+
geom_point(data = full_results_tuned_svm, aes(x = 1:49, y = tuned_svm_full), size = 3, color = "red")+
geom_point(data = P5_sales_poly, aes(x = 1:49, y = poly), size = 3, color = "green")+
geom_point(data = full_results_P5.fit, aes(x = 1:49, y = predicted_full), size = 3, color = "orange")+
xlab("Dias da Semana ao longo dos meses")+
ylab("Quantidade vendida Produto 5")
rm(list = ls())
library(ggplot2)
library(caTools)
library(caret)
P6_sales_by_weekday_month <- read.csv("P6_sales_by_weekday_month.csv",
header = TRUE, stringsAsFactors = FALSE)
P6_sales_by_weekday_month$PROD_ID <- NULL
P6_sales_by_weekday_month$REVENUE <- NULL
P6_sales <- P6_sales_by_weekday_month
P6_sales <- P6_sales[,c(1,2,4,3)] #  QTY_ORDER in the last column
ggplot(P6_sales, aes(x = 1:70, y = QTY_ORDER))+
geom_point(data = P6_sales, aes(group = day, color = factor(month)), size = 3)+
geom_smooth()+
geom_line(data = P6_sales, aes(group = month, color = factor(month)))+
xlab("Dias da Semana ao longo dos meses")+
ylab("Quantidade vendida Produto 6")
ggplot(P6_sales, aes(x = 1:70, y = QTY_ORDER))+
geom_point(data = P6_sales, aes(group = day, color = factor(month)), size = 3)+
geom_line(data = P6_sales, aes(group = month, color = factor(month)))+
xlab("Dias da Semana ao longo dos meses")+
ylab("Quantidade vendida Produto 6")
plot(P6_sales$Price, P6_sales$QTY_ORDER)
plot(P6_sales$Price, log(P6_sales$QTY_ORDER))
plot(log(P6_sales$Price), P6_sales$QTY_ORDER)
plot(P6_sales$Price, P6_sales$QTY_ORDER)
regP6 <- glm(QTY_ORDER ~ ., family = gaussian, data = P6_sales)
summary(regP6)
regP6 <- glm(QTY_ORDER ~ Price + month, family = gaussian, data = P6_sales)
summary(regP6)
mean(regP6$residuals)
hist(regP6$residuals)
fitP6 <- predict(regP6, newdata = P6_sales, type = "response")
plot(P6_sales$Price, P6_sales$QTY_ORDER)
points(P6_sales$Price, fitP6, col = "red")
rdois_poly <- lm(P6_sales$QTY_ORDER ~ fitP6)
summary(rdois_poly)$r.squared
ggplot()+
geom_point(data = P6_sales, aes(x = Price, y = QTY_ORDER, color = "black"), size = 4)+
geom_point(aes(x = P6_sales$Price,  y = fitP6, color = "red"))+
xlab("Preço")+
ylab("Quantidade P5")+
scale_colour_manual(name = " Quantidades P5",
values =c('black'='black','red'='red'),
labels = c("Observada","Prevista"))
P6_sales_GLM <- P6_sales
P6_sales_GLM$GLM <- fitP6
ggplot()+
geom_point(data = P6_sales_GLM, aes(x = 1:49, y = QTY_ORDER, group = day, color = factor(month)), size = 3)+
geom_point(data = P6_sales_GLM, aes(x = 1:49, y = GLM), size = 2, color = "red")+
xlab("Dias da Semana ao longo dos meses")+
ylab("Quantidade vendida Produto 6")
ggplot()+
geom_point(data = P6_sales_GLM, aes(x = 1:70, y = QTY_ORDER, group = day, color = factor(month)), size = 3)+
geom_point(data = P6_sales_GLM, aes(x = 1:70, y = GLM), size = 2, color = "red")+
xlab("Dias da Semana ao longo dos meses")+
ylab("Quantidade vendida Produto 6")
names(P6_sales)
feats <- names(P6_sales)[-(4)]
f <- paste(feats, collapse = " + ")
f <- as.formula(paste("QTY_ORDER ~", f))
f
set.seed(1234)
split = sample.split(P6_sales$Price, SplitRatio = 0.80)
train_nn <- subset(P6_sales, split == TRUE)
val_nn <- subset(P6_sales, split == FALSE)
val_resp <- val_nn$QTY_ORDER # saving test results
val_nn$QTY_ORDER <- NULL
my.grid <- expand.grid(.decay = c(0.1, 0.05, 0.01), .size = c(3, 4, 5, 6, 7, 8, 9))
P6.fit <- train(f, data = train_nn, method = "nnet", maxit = 7000,
preProcess = c("center", "scale"),
tuneGrid = my.grid,
trControl = trainControl (method = "repeatedcv",
number = 10,
repeats = 10,
returnResamp = "final"),
trace = F, linout = 1)
model_p6 <- P6.fit$bestTune
model_p6
predicted <- predict(P6.fit, newdata = val_nn)
p6fit.rmse <- sqrt(mean((predicted - val_resp)^2))
p6fit.rmse
results_P6.fit <- as.data.frame(cbind(val_nn, val_resp, predicted))
ggplot()+
geom_point(data = results_P6.fit, aes(x = Price, y = val_resp, color = "black"), size = 4)+
geom_point(data = results_P6.fit, aes(x = Price, y = predicted, color = "red"))+
xlab("Preço")+
ylab("Quantidade P5")+
scale_colour_manual(name = " Quantidades P5",
values =c('black'='black','red'='red'),
labels = c("Observada","Prevista"))
rdois_P6.fit <- lm(val_resp ~ predicted, data = results_P6.fit)
summary(rdois_P6.fit)$r.squared
mean(rdois_P6.fit$residuals)
predicted_full <- predict(P6.fit, newdata = P6_sales)
full_p6fit.rmse <- sqrt(mean((predicted_full - P6_sales$QTY_ORDER)^2))
full_p6fit.rmse
full_results_P6.fit <- as.data.frame(cbind(P6_sales, predicted_full))
ggplot()+
geom_point(data = full_results_P6.fit, aes(x = Price, y = QTY_ORDER, color = "black"), size = 4)+
geom_point(data = full_results_P6.fit, aes(x = Price, y = predicted_full, color = "red"))+
xlab("Preço")+
ylab("Quantidade P6")+
scale_colour_manual(name = " Quantidades P6",
values =c('black'='black','red'='red'),
labels = c("Observada","Prevista"))
full_rdois_P6.fit <- lm(QTY_ORDER ~ predicted_full, data = full_results_P6.fit)
summary(full_rdois_P6.fit)$r.squared
mean(full_rdois_P6.fit$residuals)
ggplot()+
geom_point(data = full_results_P6.fit,
aes(x = 1:70, y = QTY_ORDER, group = day, color = factor(month)), size = 3)+
geom_point(data = full_results_P6.fit, aes(x = 1:70, y = predicted_full, color = "red"), size = 3)+
geom_point(data = P6_sales_GLM, aes(x = 1:70, y = GLM, color = "black"), size = 3)+
xlab("Dias da Semana ao longo dos meses")+
ylab("Quantidade vendida Produto 6")
ggplot()+
geom_point(data = full_results_P6.fit,
aes(x = 1:70, y = QTY_ORDER, group = day, color = factor(month)), size = 3)+
geom_point(data = full_results_P6.fit, aes(x = 1:70, y = predicted_full), size = 3, color = "red")+
geom_point(data = P6_sales_GLM, aes(x = 1:70, y = GLM), size = 3, color = "black")+
xlab("Dias da Semana ao longo dos meses")+
ylab("Quantidade vendida Produto 6")
ggplot()+
geom_point(data = full_results_P6.fit,
aes(x = 1:70, y = QTY_ORDER, group = day, color = factor(month)), size = 3)+
geom_point(data = full_results_P6.fit, aes(x = 1:70, y = predicted_full), size = 3, color = "red")+
geom_point(data = P6_sales_GLM, aes(x = 1:70, y = GLM), size = 3, color = "black")+
xlab("Dias da Semana ao longo dos meses")+
ylab("Quantidade vendida Produto 6")+
scale_colour_manual(name = " Quantidades P6",
values =c('black'='black','red'='red'),
labels = c("Observada","Prevista"))
ggplot()+
geom_point(data = full_results_P6.fit,
aes(x = 1:70, y = QTY_ORDER, group = day, color = factor(month)), size = 3)+
geom_point(data = full_results_P6.fit, aes(x = 1:70, y = predicted_full), size = 3, color = "red")+
geom_point(data = P6_sales_GLM, aes(x = 1:70, y = GLM), size = 3, color = "black")+
xlab("Dias da Semana ao longo dos meses")+
ylab("Quantidade vendida Produto 6")
ggplot()+
geom_point(data = full_results_P6.fit, aes(x = Price, y = QTY_ORDER, color = "black"), size = 4)+
geom_point(data = full_results_P6.fit, aes(x = Price, y = predicted_full, color = "red"))+
xlab("Preço")+
ylab("Quantidade P6")+
scale_colour_manual(name = " Quantidades P6",
values =c('black'='black','red'='red'),
labels = c("Observada","Prevista"))
ggplot()+
geom_point(data = full_results_P6.fit,
aes(x = 1:70, y = QTY_ORDER, group = day, color = factor(month)), size = 3)+
geom_point(data = full_results_P6.fit, aes(x = 1:70, y = predicted_full), size = 3, color = "red")+
xlab("Dias da Semana ao longo dos meses")+
ylab("Quantidade vendida Produto 6")
ggplot()+
geom_point(data = full_results_P6.fit,
aes(x = 1:70, y = QTY_ORDER, group = day, color = "black"), size = 3)+
geom_point(data = full_results_P6.fit, aes(x = 1:70, y = predicted_full), size = 3, color = "red")+
xlab("Dias da Semana ao longo dos meses")+
ylab("Quantidade vendida Produto 6")
ggplot()+
geom_point(data = full_results_P6.fit,
aes(x = 1:70, y = QTY_ORDER, group = day, color = factor(month)), color = "black", size = 3)+
geom_point(data = full_results_P6.fit, aes(x = 1:70, y = predicted_full), size = 3, color = "red")+
xlab("Dias da Semana ao longo dos meses")+
ylab("Quantidade vendida Produto 6")
ggplot()+
geom_point(data = full_results_P6.fit,
aes(x = 1:70, y = QTY_ORDER, group = day, color = factor(month)), size = 3)+
geom_point(data = full_results_P6.fit, aes(x = 1:70, y = predicted_full), size = 3, color = "red")+
xlab("Dias da Semana ao longo dos meses")+
ylab("Quantidade vendida Produto 6")
ggplot()+
geom_point(data = full_results_P6.fit,
aes(x = 1:70, y = QTY_ORDER, group = day, color = factor(month)), size = 3)+
geom_point(data = full_results_P6.fit, aes(x = 1:70, y = predicted_full), size = 3, color = "red", pch = 4)+
xlab("Dias da Semana ao longo dos meses")+
ylab("Quantidade vendida Produto 6")
rm(list = ls())
P9_sales_by_weekday_month <- read.csv("P9_sales_by_weekday_month.csv",
header = TRUE, stringsAsFactors = FALSE)
P9_sales_by_weekday_month$PROD_ID <- NULL
P9_sales_by_weekday_month$REVENUE <- NULL
P9_sales <- P6_sales_by_weekday_month
P9_sales <- P9_sales[,c(1,2,4,3)] #  QTY_ORDER in the last column
P9_sales_by_weekday_month <- read.csv("P9_sales_by_weekday_month.csv",
header = TRUE, stringsAsFactors = FALSE)
View(P9_sales_by_weekday_month)
P9_sales_by_weekday_month$PROD_ID <- NULL
P9_sales_by_weekday_month$REVENUE <- NULL
P9_sales <- P9_sales_by_weekday_month
P9_sales <- P9_sales[,c(1,2,4,3)] #  QTY_ORDER in the last column
ggplot(P9_sales, aes(x = 1:56, y = QTY_ORDER))+
geom_point(data = P9_sales, aes(group = day, color = factor(month)), size = 3)+
geom_line(data = P9_sales, aes(group = month, color = factor(month)))+
xlab("Dias da Semana ao longo dos meses")+
ylab("Quantidade vendida Produto 9")
plot(P9_sales$Price, P9_sales$QTY_ORDER)
plot(P9_sales$Price, log(P9_sales$QTY_ORDER))
plot(log(P9_sales$Price), P9_sales$QTY_ORDER)
plot(P9_sales$Price, log(P9_sales$QTY_ORDER))
P9_sales <- subset(P9_sales, log(QTY_ORDER) > 2)
plot(P9_sales$Price, log(P9_sales$QTY_ORDER))
regP9 <- glm(QTY_ORDER ~ ., family = gaussian, data = P9_sales)
summary(regP9)
regP9 <- glm(QTY_ORDER ~ Price + month, family = gaussian, data = P9_sales)
summary(regP9)
mean(regP9$residuals)
hist(regP9$residuals)
regP9 <- glm(log(QTY_ORDER) ~ Price + month, family = gaussian, data = P9_sales)
summary(regP9)
mean(regP9$residuals)
hist(regP9$residuals)
fitP9 <- predict(regP9, newdata = P9_sales, type = "response")
plot(P9_sales$Price, log(P9_sales$QTY_ORDER))
points(P9_sales$Price, fitP9, col = "red")
rdois_glm <- lm(log(P9_sales$QTY_ORDER) ~ fitP9)
summary(rdois_glm)$r.squared
ggplot()+
geom_point(data = P9_sales, aes(x = Price, y = log(QTY_ORDER), color = "black"), size = 4)+
geom_point(aes(x = P9_sales$Price,  y = fitP9, color = "red"))+
xlab("Preço")+
ylab("Quantidade P9")+
scale_colour_manual(name = " Quantidades P9",
values =c('black'='black','red'='red'),
labels = c("Observada","Prevista"))
P9_sales_GLM <- P9_sales
P9_sales_GLM$GLM <- fitP9
View(P9_sales_GLM)
P9_sales_GLM$GLM <- exp(fitP9)
ggplot()+
geom_point(data = P9_sales_GLM, aes(x = 1:55, y = QTY_ORDER, group = day, color = factor(month)), size = 3)+
geom_point(data = P9_sales_GLM, aes(x = 1:55, y = GLM), size = 2, color = "red")+
xlab("Dias da Semana ao longo dos meses")+
ylab("Quantidade vendida Produto 9")
feats <- names(P9_sales)[-(4)]
f <- paste(feats, collapse = " + ")
f <- as.formula(paste("QTY_ORDER ~", f))
f
set.seed(1234)
split = sample.split(P9_sales$Price, SplitRatio = 0.80)
train_nn <- subset(P9_sales, split == TRUE)
val_nn <- subset(P9_sales, split == FALSE)
val_resp <- val_nn$QTY_ORDER # saving test results
val_nn$QTY_ORDER <- NULL
my.grid <- expand.grid(.decay = c(0.1, 0.05, 0.01), .size = c(3, 4, 5, 6, 7, 8, 9))
P9.fit <- train(f, data = train_nn, method = "nnet", maxit = 7000,
preProcess = c("center", "scale"),
tuneGrid = my.grid,
trControl = trainControl (method = "repeatedcv",
number = 10,
repeats = 10,
returnResamp = "final"),
trace = F, linout = 1)
model_p9 <- P9.fit$bestTune
model_p9
predicted <- predict(P9.fit, newdata = val_nn)
p9fit.rmse <- sqrt(mean((predicted - val_resp)^2))
p9fit.rmse
results_P9.fit <- as.data.frame(cbind(val_nn, val_resp, predicted))
ggplot()+
geom_point(data = results_P9.fit, aes(x = Price, y = val_resp, color = "black"), size = 4)+
geom_point(data = results_P9.fit, aes(x = Price, y = predicted, color = "red"))+
xlab("Preço")+
ylab("Quantidade P5")+
scale_colour_manual(name = " Quantidades P5",
values =c('black'='black','red'='red'),
labels = c("Observada","Prevista"))
View(P9_sales)
P9_sales$QTY_ORDER <- log(P9_sales$QTY_ORDER)
set.seed(1234)
split = sample.split(P9_sales$Price, SplitRatio = 0.80)
train_nn <- subset(P9_sales, split == TRUE)
val_nn <- subset(P9_sales, split == FALSE)
val_resp <- val_nn$QTY_ORDER # saving test results
val_nn$QTY_ORDER <- NULL
my.grid <- expand.grid(.decay = c(0.1, 0.05, 0.01), .size = c(3, 4, 5, 6, 7, 8, 9))
P9.fit <- train(f, data = train_nn, method = "nnet", maxit = 7000,
preProcess = c("center", "scale"),
tuneGrid = my.grid,
trControl = trainControl (method = "repeatedcv",
number = 10,
repeats = 10,
returnResamp = "final"),
trace = F, linout = 1)
model_p9 <- P9.fit$bestTune
model_p9
predicted <- predict(P9.fit, newdata = val_nn)
p9fit.rmse <- sqrt(mean((predicted - val_resp)^2))
p9fit.rmse
exp(0.5312)
results_P9.fit <- as.data.frame(cbind(val_nn, val_resp, predicted))
ggplot()+
geom_point(data = results_P9.fit, aes(x = Price, y = val_resp, color = "black"), size = 4)+
geom_point(data = results_P9.fit, aes(x = Price, y = predicted, color = "red"))+
xlab("Preço")+
ylab("Quantidade P9")+
scale_colour_manual(name = " Quantidades P9",
values =c('black'='black','red'='red'),
labels = c("Observada","Prevista"))
View(results_P9.fit)
rdois_P9.fit <- lm(val_resp ~ predicted, data = results_P9.fit)
summary(rdois_P9.fit)$r.squared
mean(rdois_P9.fit$residuals)
predicted_full <- predict(P9.fit, newdata = P6_sales)
View(P9_sales)
predicted_full <- predict(P9.fit, newdata = P9_sales)
full_p9fit.rmse <- sqrt(mean((predicted_full - P9_sales$QTY_ORDER)^2))
full_p9fit.rmse
exp(0.4165462)
full_results_P9.fit <- as.data.frame(cbind(P9_sales, predicted_full))
View(full_results_P9.fit)
ggplot()+
geom_point(data = full_results_P9.fit, aes(x = Price, y = QTY_ORDER, color = "black"), size = 4)+
geom_point(data = full_results_P9.fit, aes(x = Price, y = predicted_full, color = "red"))+
xlab("Preço")+
ylab("Quantidade P9")+
scale_colour_manual(name = " Quantidades P9",
values =c('black'='black','red'='red'),
labels = c("Observada","Prevista"))
summary(full_rdois_P9.fit)$r.squared
full_rdois_P9.fit <- lm(QTY_ORDER ~ predicted_full, data = full_results_P9.fit)
summary(full_rdois_P9.fit)$r.squared
mean(full_rdois_P9.fit$residuals)
full_results_P9.fit$QTY_ORDER <- exp(full_results_P9.fit$QTY_ORDER)
full_results_P9.fit$predicted_full <- exp(full_results_P9.fit$predicted_full)
ggplot()+
geom_point(data = full_results_P9.fit,
aes(x = 1:55, y = QTY_ORDER, group = day, color = factor(month)), size = 3)+
geom_point(data = full_results_P6.fit, aes(x = 1:55, y = predicted_full), size = 3, color = "red", pch = 4)+
xlab("Dias da Semana ao longo dos meses")+
ylab("Quantidade vendida Produto 9")
ggplot()+
geom_point(data = full_results_P9.fit,
aes(x = 1:55, y = QTY_ORDER, group = day, color = factor(month)), size = 3)+
geom_point(data = full_results_P9.fit, aes(x = 1:55, y = predicted_full), size = 3, color = "red", pch = 4)+
xlab("Dias da Semana ao longo dos meses")+
ylab("Quantidade vendida Produto 9")
